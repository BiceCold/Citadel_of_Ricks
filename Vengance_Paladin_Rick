import random
import math

strength_modifier = 3
AC = 13

def warhammer():
    min = 1
    max = 10
    roll = random.randint(min,max)
    return roll

def divine_smite(spell_slots_level):
    min = 1
    max = 8
    roll = random.randint(min, max)*spell_slots_level
    return roll

def hunters_mark():
    min = 1
    max = 6
    roll = random.randint(min, max)
    return roll

def attack_roll():
    min = 1
    max = 20
    roll = random.randint(min, max)
    return roll

def confirm_damage(Strength_modifier, spell_slots_level):
    hammer = warhammer()
    divine = divine_smite(spell_slots_level)
    hunter = hunters_mark()
    strength = strength_modifier
    confirmed_damage = hammer + divine + hunter + Strength_modifier
    return confirmed_damage


def fight(AC, Strength_modifier, spell_slots_level):
    damage = 0
    damage2 = 0
    hit1 = attack_roll()
    hit2 = attack_roll()
    if hit1 < AC:
        damage = 0
    else:
        if hit1 == 20:
            damage = damage + confirm_damage(0, spell_slots_level)*2 + strength_modifier
        else:
            damage = damage + confirm_damage(Strength_modifier, spell_slots_level)

    if hit1 > AC and hit2 > AC:
        if hit1 == 20:
            damage = damage + confirm_damage(0, spell_slots_level)*2 + strength_modifier
        else:
            damage2 = confirm_damage(Strength_modifier, spell_slots_level)
    total_damage = damage + damage2

    return(total_damage)

def mean_damage(attack_rounds, AC, Strength_modifier, spell_slots_level):
    total = 0
    stage = 0
    totals_listed = [0]
    for rounds in range(0, attack_rounds):
        dps = fight(AC, Strength_modifier, spell_slots_level)
        stage += 1
        total += dps
        totals_listed.append(dps)
    average = total/stage
    print(f"the most damage rolled was {max(totals_listed)}")
    print(f"The average damage was {average}")

mean_damage(10000, 13, 3, 2)
